package io.github.merchantpug.apugli.condition.entity;

import io.github.apace100.origins.power.factory.condition.ConditionFactory;
import io.github.apace100.origins.util.Comparison;
import io.github.apace100.origins.util.SerializableData;
import io.github.apace100.origins.util.SerializableDataType;
import io.github.merchantpug.apugli.Apugli;
import io.github.merchantpug.apugli.mixin.ServerPlayerEntityAccessor;
import net.minecraft.entity.Entity;
import net.minecraft.entity.LivingEntity;
import net.minecraft.server.network.ServerPlayerEntity;

public class JoinInvulnerabilityTicksCondition {
    public static boolean condition(SerializableData.Instance data, Entity entity) {
        Comparison comparison = ((Comparison)data.get("comparison"));
        int compareTo = data.getInt("compare_to");
        if (entity instanceof ServerPlayerEntity && !entity.world.isClient()) {
            return comparison.compare(((ServerPlayerEntityAccessor) entity).getJoinInvulnerabilityTicks(), compareTo);
        }
        return false;
    }

    public static ConditionFactory<LivingEntity> getFactory() {
        return new ConditionFactory<>(Apugli.identifier("join_invulnerability_ticks"), new SerializableData()
                .add("compare_to", SerializableDataType.INT)
                .add("comparison", SerializableDataType.COMPARISON, Comparison.GREATER_THAN_OR_EQUAL),
                JoinInvulnerabilityTicksCondition::condition
        );
    }
}
