package net.merchantpug.apugli.condition.entity;

import io.github.apace100.apoli.data.ApoliDataTypes;
import io.github.apace100.apoli.power.factory.condition.ConditionFactory;
import io.github.apace100.apoli.util.Comparison;
import io.github.apace100.calio.data.SerializableData;
import io.github.apace100.calio.data.SerializableDataTypes;
import net.merchantpug.apugli.Apugli;
import net.merchantpug.apugli.mixin.ServerPlayerEntityAccessor;
import net.minecraft.entity.Entity;
import net.minecraft.server.network.ServerPlayerEntity;

public class JoinInvulnerabilityTicksCondition {
    public static boolean condition(SerializableData.Instance data, Entity entity) {
        Comparison comparison = ((Comparison)data.get("comparison"));
        int compareTo = data.getInt("compare_to");
        if (entity instanceof ServerPlayerEntity && !entity.world.isClient()) {
            return comparison.compare(((ServerPlayerEntityAccessor) entity).getJoinInvulnerabilityTicks(), compareTo);
        }
        return false;
    }

    public static ConditionFactory<Entity> getFactory() {
        return new ConditionFactory<>(Apugli.identifier("join_invulnerability_ticks"), new SerializableData()
                .add("compare_to",SerializableDataTypes.INT)
                .add("comparison",ApoliDataTypes.COMPARISON, Comparison.GREATER_THAN_OR_EQUAL),
                JoinInvulnerabilityTicksCondition::condition
        );
    }
}
