plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'signing'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'com.modrinth.minotaur' version '2.1.1'
	id "com.github.breadmoirai.github-release" version "2.2.12"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Ladysnake Libs"
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "JitPack"
		url = 'https://jitpack.io'
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/apugli.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// modImplementation "com.github.apace100:apoli:${project.apoli_version}"
	modImplementation "com.github.eggohito:apoli:${project.apoli_version}"

	modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${project.reach_version}"

	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	include "maven.modrinth:midnightlib:${project.midnightlib_version}"

	implementation "com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"
	annotationProcessor "com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"
	include "com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	def environment = System.getenv("ENVIRONMENT")
	if (environment != "production") {
		from(rootProject.rootDir.absolutePath + "/testdata") { into 'data' }
		from(rootProject.rootDir.absolutePath + "/testassets") { into 'assets'}
	}
}

tasks.named("processResources") {
	inputs.property("environment") {
		System.getenv("ENVIRONMENT") || null
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			afterEvaluate {
				artifact remapJar
				artifact(sourcesJar.archiveFile) {
					classifier = "sources"
					builtBy remapSourcesJar
				}
			}
		}
	}
	repositories {
		maven {
			name = "merchantpug"
			url = "https://maven.merchantpug.net/releases"
			credentials(PasswordCredentials)
			authentication {
				create("basic", BasicAuthentication)
			}
		}
	}
}
