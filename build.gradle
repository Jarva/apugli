plugins {
    id "java"
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.10.0-SNAPSHOT" apply false
    id "maven-publish"
}

architectury {
    minecraft = rootProject.minecraft_version
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        // Be quiet about the Mojang mappings license
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        // mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        maven { url 'https://ladysnake.jfrog.io/artifactory/mods' }
        maven { url 'https://maven.jamieswhiteshirt.com/libs-release/' }
        maven { url 'https://maven.shedaniel.me/' }
        maven { url 'https://maven.theillusivec4.top' }
        maven { url 'https://maven.terraformersmc.com/' }
        maven { url 'https://jitpack.io' }
        flatDir {
            dir rootProject.file('libs')
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    processResources {
        def environment = System.getenv("ENVIRONMENT");
        if (environment != "production") {
            from(rootProject.rootDir.absolutePath + "/testdata") { into 'data' }
            from(rootProject.rootDir.absolutePath + "/testassets") { into 'assets' }
        }
    }

    tasks.named("processResources") {
        inputs.property("environment") {
            System.getenv("ENVIRONMENT") || null
        }
    }

    java {
        withSourcesJar()
    }
}
